version: "3.9"
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: ["5432:5432"]
    volumes: ["pg:/var/lib/postgresql/data"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d ${POSTGRES_DB:-postgres} -U ${POSTGRES_USER:-postgres}",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  mongo:
    image: mongo:7
    ports: ["27017:27017"]
    volumes: ["mongo:/data/db"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mongosh --quiet --eval 'db.runCommand({ ping: 1 })'",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pubsub:
    image: google/cloud-sdk:emulators
    command: [ "gcloud", "beta", "emulators", "pubsub", "start", "--host-port=0.0.0.0:8085" ]
    ports: ["8085:8085"]
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "bash -c 'echo > /dev/tcp/127.0.0.1/8085'",
        ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  pubsub-init:
    image: google/cloud-sdk:emulators
    depends_on:
      pubsub:
        condition: service_healthy
    environment:
      PUBSUB_EMULATOR_HOST: "pubsub:8085"
    entrypoint: ["/bin/sh","-c"]
    command: >
      "gcloud beta emulators pubsub env-init &&
       gcloud pubsub topics create ${PUBSUB_LOAD_ASSIGNED_TOPIC} --project=${PUBSUB_PROJECT_ID} &&
       gcloud pubsub subscriptions create ${PUBSUB_LOAD_ASSIGNED_SUBSCRIPTION} \
         --topic=${PUBSUB_LOAD_ASSIGNED_TOPIC} --project=${PUBSUB_PROJECT_ID}"
volumes:
  pg: {}
  mongo: {}
